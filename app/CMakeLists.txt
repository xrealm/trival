# For more information about using CMake with Android Studio, read the
# documentation: https://d.android.com/studio/projects/add-native-code.html

# Sets the minimum version of CMake required to build the native library.

cmake_minimum_required(VERSION 3.4.1)

# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds them for you.
# Gradle automatically packages shared libraries with your APK.


include_directories(src/main/cpp)
include_directories(src/main/cpp/include)
include_directories(src/main/jniLibs/include)

add_library(
        png
        STATIC
        IMPORTED
)

set_target_properties(
        png
        PROPERTIES IMPORTED_LOCATION
        src/main/cpp/libpng/libpng.a
)

add_library(
        ffmpeg
        SHARED
        IMPORTED
)

set_target_properties(
        ffmpeg
        PROPERTIES IMPORTED_LOCATION
        ${CMAKE_SOURCE_DIR}/src/main/jniLibs/${ANDROID_ABI}/libffmpeg.so
)


add_library( # Sets the name of the library.
        triangle

        # Sets the library as a shared library.
        SHARED

        # Provides a relative path to your source file(s).
        src/main/cpp/triangle.cpp
        src/main/cpp/shader.h
        src/main/cpp/util.h
        src/main/cpp/render/rgba_frame.h
        src/main/cpp/render/rgba_frame.cpp
        src/main/cpp/render/pic_texture.h
        src/main/cpp/render/pic_texture.cpp
        src/main/cpp/render/preview_render.cpp
        src/main/cpp/render/egl_core.cpp
        src/main/cpp/render/egl_share_context.cpp
        src/main/cpp/render/preview_controller.cpp
        )

# Searches for a specified prebuilt library and stores the path as a
# variable. Because CMake includes system libraries in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.

find_library( # Sets the name of the path variable.
        log-lib

        # Specifies the name of the NDK library that
        # you want CMake to locate.
        log)

#link with opengl es
find_library(
        gl-lib
        GLESv3
)

find_library(
        egl-lib
        EGL
)

find_library(
        android-lib
        android
)


# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in this
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
        triangle
        ffmpeg
        z
        OpenSLES
        ${android-lib}
        ${egl-lib}
        ${gl-lib}
        # Links the target library to the log library
        # included in the NDK.
        ${log-lib})